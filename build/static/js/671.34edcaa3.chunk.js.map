{"version":3,"file":"static/js/671.34edcaa3.chunk.js","mappings":"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","sources":["Components/CustomePass.tsx","pages/user-auth/user-login.tsx"],"sourcesContent":["import React, { ChangeEvent, FocusEvent, useState } from 'react';\r\nimport { Alert, FormFeedback, Input, Label } from 'reactstrap';\r\n\r\ninterface CustomInputProps {\r\n  err?: boolean;\r\n  name: string;\r\n  placeholder: string;\r\n  value: string;\r\n  validationError: boolean | undefined;\r\n  handleChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  handleBlur: (e: FocusEvent<HTMLInputElement>) => void;\r\n  touchedError: boolean | undefined;\r\n  className?: string;\r\n  buttonClassName?: string;\r\n}\r\n\r\nfunction CustomePass({\r\n  err,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  validationError,\r\n  handleChange,\r\n  handleBlur,\r\n  touchedError,\r\n  buttonClassName,\r\n  ...other\r\n}: CustomInputProps) {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3\">\r\n        {err ? <Alert color=\"danger\">{err}</Alert> : null}\r\n        <Label className=\"form-label text-capitalize fs-5\">{name}</Label>\r\n        <div className=\"input-group auth-pass-inputgroup\">\r\n          <Input\r\n            name={name}\r\n            className=\"form-control\"\r\n            placeholder={placeholder}\r\n            type={show ? 'text' : 'password'}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={value || ''}\r\n            invalid={touchedError && validationError}\r\n            {...other}\r\n          />\r\n          <button\r\n            onClick={() => setShow(!show)}\r\n            style={{ background: '#FE9150' }}\r\n            className={`btn btn-light ${buttonClassName}`}\r\n            type=\"button\"\r\n            id=\"password-addon\"\r\n          >\r\n            <i className=\"mdi mdi-eye-outline\"></i>\r\n          </button>\r\n        </div>\r\n        {touchedError && validationError && (\r\n          <FormFeedback type=\"invalid\">{validationError}</FormFeedback>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomePass;\r\n","import React from 'react';\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Label,\r\n  FormFeedback,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n// Formik validation\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { useUserAuth } from 'contexts/UserAuth';\r\n\r\nimport withRouter from 'Components/Common/withRouter';\r\nimport { createSelector } from 'reselect';\r\nimport CustomePass from 'Components/CustomePass';\r\nimport { useMatchMyUser } from 'api/userApi';\r\n\r\nconst UserLogin = (props: any) => {\r\n  const { userLogin, isPending } = useMatchMyUser();\r\n  const { isLoggedIn } = useUserAuth();\r\n  const nevigation = useNavigate();\r\n\r\n  const selectProperties = createSelector(\r\n    (state: any) => state.Login,\r\n    login => ({\r\n      error: login.error,\r\n    })\r\n  );\r\n\r\n  const { error } = useSelector(selectProperties);\r\n\r\n  // Form validation\r\n  const validation: any = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().trim().required('Please Enter Your email'),\r\n      password: Yup.string().trim().required('Please Enter Your Password'),\r\n    }),\r\n    onSubmit: (values: Login) => {\r\n      userLogin(values);\r\n      console.log(isPending);\r\n    },\r\n  });\r\n\r\n  if (isLoggedIn) {\r\n    nevigation('/user');\r\n    return null;\r\n  }\r\n  return (\r\n    <Form\r\n      className=\"form-horizontal login-form\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        validation.handleSubmit();\r\n        return false;\r\n      }}\r\n    >\r\n      <h1 className=\"text-center fs-1 fw-semibold my-5\">\r\n        Wellcome to our <span className=\"text-gradients\">ReviewAide</span>\r\n      </h1>\r\n      <div className=\"mb-3\">\r\n        {error ? <Alert color=\"danger\">{error}</Alert> : null}\r\n        <Label className=\"form-label fs-5\">Email</Label>\r\n        <Input\r\n          name=\"email\"\r\n          className=\"form-control rounded-4 fs-5\"\r\n          placeholder=\"Enter your email\"\r\n          type=\"text\"\r\n          onChange={validation.handleChange}\r\n          onBlur={validation.handleBlur}\r\n          value={validation.values.email || ''}\r\n          invalid={\r\n            validation.touched.email && validation.errors.email ? true : false\r\n          }\r\n        />\r\n        {validation.touched.email && validation.errors.email ? (\r\n          <FormFeedback type=\"invalid\">{validation.errors.email}</FormFeedback>\r\n        ) : null}\r\n      </div>\r\n      <CustomePass\r\n        className=\"rounded-start-pill fs-5 \"\r\n        buttonClassName=\"rounded-end-pill\"\r\n        name=\"password\"\r\n        handleBlur={validation.handleBlur}\r\n        handleChange={validation.handleChange}\r\n        placeholder=\"Enter your password\"\r\n        touchedError={validation.touched.password}\r\n        validationError={validation.errors.password}\r\n        value={validation.values.password}\r\n      />\r\n      <div className=\"my-3\">\r\n        <Link\r\n          className=\"fs-6 text-decoration-none text-gradients fw-semibold py-5\"\r\n          to=\"/user/forgot-password\"\r\n        >\r\n          Forget Password\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"my-3 d-grid \">\r\n        <button\r\n          aria-disabled={isPending}\r\n          // disabled={isPending}\r\n          className=\"btn btn-block fw-bold text-white fs-5 rounded-5\"\r\n          type=\"submit\"\r\n          style={{ background: '#FE9150' }}\r\n        >\r\n          {isPending ? (\r\n            <Spin\r\n              style={{\r\n                color: '#FFFFFF',\r\n              }}\r\n              indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n            />\r\n          ) : (\r\n            <>Log In</>\r\n          )}\r\n        </button>\r\n        <div className=\"my-3\">\r\n          <span>Don't have an account?</span>\r\n          <Link\r\n            className=\"fs-6 text-decoration-none text-gradients fw-semibold ps-2\"\r\n            to=\"/sign-up\"\r\n          >\r\n            Sign up\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserLogin);\r\n"],"names":["_ref","err","name","placeholder","value","validationError","handleChange","handleBlur","touchedError","buttonClassName","other","show","setShow","useState","_jsx","children","_jsxs","className","Alert","color","Label","Input","type","onChange","onBlur","invalid","onClick","style","background","concat","id","FormFeedback","withRouter","props","userLogin","isPending","useMatchMyUser","isLoggedIn","useUserAuth","nevigation","useNavigate","selectProperties","createSelector","state","Login","login","error","useSelector","validation","useFormik","enableReinitialize","initialValues","email","password","validationSchema","Yup","trim","required","onSubmit","values","console","log","Form","e","preventDefault","handleSubmit","touched","errors","CustomePass","Link","to","Spin","indicator","LoadingOutlined","fontSize","spin","_Fragment"],"sourceRoot":""}