{"version":3,"file":"static/js/646.c11937d6.chunk.js","mappings":"0QAaA,QAVA,SAAoBA,GAOlB,OANA,SAAiCC,GAC/B,IAAIC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACb,OAAOC,EAAAA,EAAAA,KAACR,EAAS,IAAKC,EAAOQ,OAAQ,CAAEP,WAAUE,WAAUE,WAC7D,CAEF,E,cCqDA,QAhDA,SAAoBI,GAWE,IAXD,IACnBC,EAAG,KACHC,EAAI,YACJC,EAAW,MACXC,EAAK,gBACLC,EAAe,aACfC,EAAY,WACZC,EAAU,aACVC,EAAY,gBACZC,KACGC,GACcV,EACjB,MAAOW,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GACjC,OACEf,EAAAA,EAAAA,KAAA,OAAAgB,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,CAClBb,GAAMH,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,MAAM,SAAQJ,SAAEb,IAAe,MAC7CH,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAACH,UAAU,kCAAiCF,SAAEZ,KACpDa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCF,SAAA,EAC/ChB,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACJlB,KAAMA,EACNc,UAAU,eACVb,YAAaA,EACbkB,KAAMV,EAAO,OAAS,WACtBW,SAAUhB,EACViB,OAAQhB,EACRH,MAAOA,GAAS,GAChBoB,QAAShB,GAAgBH,KACrBK,KAENZ,EAAAA,EAAAA,KAAA,UACE2B,QAASA,IAAMb,GAASD,GACxBe,MAAO,CAAEC,WAAY,WACrBX,UAAS,iBAAAY,OAAmBnB,GAC5BY,KAAK,SACLQ,GAAG,iBAAgBf,UAEnBhB,EAAAA,EAAAA,KAAA,KAAGkB,UAAU,6BAGhBR,GAAgBH,IACfP,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CAACT,KAAK,UAASP,SAAET,QAKxC,EC5Da0B,EAAuB,wB,cCC7B,MCsIP,EAAeC,GA5GIzC,IACjB,MAAM,UAAE0C,EAAS,UAAEC,GD3BSC,MAC5B,MAiBEC,YAAaH,EAAS,UACtBC,EAAS,MACTG,IACEC,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,kBACdC,WAtBqBC,UACrB,MAAMC,QAAiBC,MAAM,GAADf,OAAIG,EAAoB,gBAAgB,CAClEa,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,WAGzB,IAAKP,EAASQ,GACZ,MAAM,IAAIC,MAAM,sBAGlB,aADmBT,EAASU,MACjB,IAYb,MAAO,CAAEnB,YAAWC,YAAWG,QAAO,ECCLF,IAC3B,WAAEkB,EAAU,WAAEC,EAAU,OAAEC,EAAM,UAAEC,IAAcC,EAAAA,EAAAA,MAGhDC,IAFa/D,EAAAA,EAAAA,OAEMgE,EAAAA,EAAAA,KACtBC,GAAeA,EAAMC,QACtBC,IAAK,CACHzB,MAAOyB,EAAMzB,YAIX,MAAEA,IAAU0B,EAAAA,EAAAA,IAAYL,GAGxBM,GAAkBC,EAAAA,EAAAA,IAAU,CAChCC,oBAAoB,EACpBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAAaC,SAAS,2BAA2BC,OACxDJ,SAAUE,EAAAA,KAAaC,SAAS,gCAElCE,SAAWC,IACT1C,EAAU0C,GACVC,QAAQC,IAAI3C,EAAU,IAI1B,OACEnB,EAAAA,EAAAA,MAAC+D,EAAAA,EAAI,CACH9D,UAAU,6BACV0D,SAAUK,IACRA,EAAEC,iBACFhB,EAAWiB,gBACJ,GACPnE,SAAA,EAEFC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oCAAmCF,SAAA,CAAC,oBAChChB,EAAAA,EAAAA,KAAA,QAAMkB,UAAU,iBAAgBF,SAAC,mBAEnDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,CAClBuB,GAAQvC,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,MAAM,SAAQJ,SAAEuB,IAAiB,MACjDvC,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAACH,UAAU,kBAAiBF,SAAC,WACnChB,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACJlB,KAAK,QACLc,UAAU,8BACVb,YAAY,mBACZkB,KAAK,OACLC,SAAU0C,EAAW1D,aACrBiB,OAAQyC,EAAWzD,WACnBH,MAAO4D,EAAWW,OAAOP,OAAS,GAClC5C,WACEwC,EAAWkB,QAAQd,QAASJ,EAAWmB,OAAOf,SAGjDJ,EAAWkB,QAAQd,OAASJ,EAAWmB,OAAOf,OAC7CtE,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CAACT,KAAK,UAASP,SAAEkD,EAAWmB,OAAOf,QAC9C,SAENtE,EAAAA,EAAAA,KAACsF,EAAW,CACVpE,UAAU,2BACVP,gBAAgB,mBAChBP,KAAK,WACLK,WAAYyD,EAAWzD,WACvBD,aAAc0D,EAAW1D,aACzBH,YAAY,sBACZK,aAAcwD,EAAWkB,QAAQb,SACjChE,gBAAiB2D,EAAWmB,OAAOd,SACnCjE,MAAO4D,EAAWW,OAAON,YAE3BvE,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,OAAMF,UACnBhB,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CACHrE,UAAU,4DACVsE,GAAG,wBAAuBxE,SAC3B,uBAKHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcF,SAAA,EAC3BhB,EAAAA,EAAAA,KAAA,UACEkB,UAAU,kDACVK,KAAK,SACLK,MAAO,CAAEC,WAAY,WAAYb,SAClC,YAGDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBhB,EAAAA,EAAAA,KAAA,QAAAgB,SAAM,4BACNhB,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CACHrE,UAAU,4DACVsE,GAAG,wBAAuBxE,SAC3B,oBAKA,G","sources":["Components/Common/withRouter.tsx","Components/CustomePass.tsx","helpers/url_helper.ts","api/userApi.ts","pages/user-auth/user-login.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction withRouter(Component: any) {\r\n  function ComponentWithRouterProp(props: any) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default withRouter;\r\n","import React, { ChangeEvent, FocusEvent, useState } from 'react';\r\nimport { Alert, FormFeedback, Input, Label } from 'reactstrap';\r\n\r\ninterface CustomInputProps {\r\n  err?: boolean;\r\n  name: string;\r\n  placeholder: string;\r\n  value: string;\r\n  validationError: boolean | undefined;\r\n  handleChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  handleBlur: (e: FocusEvent<HTMLInputElement>) => void;\r\n  touchedError: boolean | undefined;\r\n  className?: string;\r\n  buttonClassName?: string;\r\n}\r\n\r\nfunction CustomePass({\r\n  err,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  validationError,\r\n  handleChange,\r\n  handleBlur,\r\n  touchedError,\r\n  buttonClassName,\r\n  ...other\r\n}: CustomInputProps) {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3\">\r\n        {err ? <Alert color=\"danger\">{err}</Alert> : null}\r\n        <Label className=\"form-label text-capitalize fs-5\">{name}</Label>\r\n        <div className=\"input-group auth-pass-inputgroup\">\r\n          <Input\r\n            name={name}\r\n            className=\"form-control\"\r\n            placeholder={placeholder}\r\n            type={show ? 'text' : 'password'}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={value || ''}\r\n            invalid={touchedError && validationError}\r\n            {...other}\r\n          />\r\n          <button\r\n            onClick={() => setShow(!show)}\r\n            style={{ background: '#FE9150' }}\r\n            className={`btn btn-light ${buttonClassName}`}\r\n            type=\"button\"\r\n            id=\"password-addon\"\r\n          >\r\n            <i className=\"mdi mdi-eye-outline\"></i>\r\n          </button>\r\n        </div>\r\n        {touchedError && validationError && (\r\n          <FormFeedback type=\"invalid\">{validationError}</FormFeedback>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomePass;\r\n","// Server Start\r\n\r\nexport const REACT_APP_SERVER_API = 'http://localhost:4500';\r\n// export const REACT_APP_SERVER_API = 'http://localhost:8080/';\r\nconst SERVER_API = REACT_APP_SERVER_API;\r\nexport const ADMIN_REGISTER = SERVER_API + 'api/auth/register';\r\nexport const ADMIN_LOGIN = SERVER_API + 'api/auth/login';\r\nexport const ADMIN_USER_EDIT = SERVER_API + 'api/auth/user';\r\nexport const FORGET_PASSWORD_USER = SERVER_API + 'api/users/forget-password';\r\nexport const RESET_PASSWORD_USER = SERVER_API + 'api/users/reset-password';\r\nexport const POST_RESET_PASSWORD_USER =\r\n  SERVER_API + 'api/users/post-reset-password';\r\nexport const CREATE_USERS = SERVER_API + 'api/users/create';\r\nexport const GET_USERS = SERVER_API + 'api/users/users';\r\nexport const GET_USERS_DASHBOARD = SERVER_API + 'api/users/';\r\nexport const GET_USERS_MINI_UPDATE = SERVER_API + 'api/users/mini-update';\r\nexport const USER_LOGIN = SERVER_API + 'api/users/login';\r\nexport const USER_UPDATE = SERVER_API + 'api/users/update';\r\nexport const CLIENT_VISITOR = SERVER_API + 'api/client/';\r\nexport const CLIENT_VISITOR_GET = SERVER_API + 'api/client/review';\r\nexport const CLIENT_QR_CODE_OPEN_REVIEW_GET =\r\n  SERVER_API + 'api/review/open-review';\r\nexport const QRCODE_GEN_VISITOR = SERVER_API + 'api/client/qr_gen';\r\nexport const QRCODE_GEN_VISITOR_DELETE = SERVER_API + 'api/client/qr_gen';\r\nexport const QRCODE_GEN_VISITOR_CREATE = SERVER_API + 'api/client/qr_gen';\r\nexport const CLIENT_VISITOR_METHODS = SERVER_API + 'api/client/methods';\r\nexport const CLIENT_VISITOR_UNSUBSCRIBE = SERVER_API + 'api/client/unsubscribe';\r\nexport const ADMIN_GET = SERVER_API + 'api';\r\nexport const PRIVATE_REVIEW = SERVER_API + 'api/review/private';\r\nexport const QR_CODE_PRIVATE_REVIEW =\r\n  SERVER_API + 'api/review/opne-qr-code-store';\r\nexport const CUSSTOMER_SUPPORT_EMAIL = SERVER_API + 'api/customer/email';\r\nexport const USER_MARKETING_STORE = SERVER_API + 'api/marketing';\r\nexport const USER_UPDATE_SHORTCUT = SERVER_API + 'api/shortcut';\r\nexport const USER_UPDATE_SHORTCUT_POST_GET =\r\n  SERVER_API + 'api/shortcut/getorpost';\r\nexport const USER_UPDATE_SHORTCUT_PUBLICE_REVIEW_POST =\r\n  SERVER_API + 'api/shortcut/post';\r\nexport const PRIVATE_REVIEW_SHORTCUT = SERVER_API + 'api/review/short';\r\n\r\nexport const LINK = 'https://docapt.com/';\r\nexport const AVATER_IMAGE_URL = 'https://docapt.com/';\r\nexport const RESETPASSWORD_LINK = 'https://docapt.com';\r\nexport const REVIEW_LOGO_LINK = 'https://docapt.com';\r\nexport const SERVER_LINK = 'https://docapt.com/';\r\n\r\n// export const LINK = 'http://localhost:3000/';\r\n// export const AVATER_IMAGE_URL = 'http://localhost:8080/';\r\n// export const RESETPASSWORD_LINK = 'http://localhost:3000';\r\n// export const REVIEW_LOGO_LINK = 'http://localhost:8080';\r\n// export const SERVER_LINK = 'http://localhost:8080/';\r\n","import { REACT_APP_SERVER_API } from '../helpers/url_helper';\r\nimport { useMutation, useQuery } from '@tanstack/react-query';\r\n\r\nexport const useMatchMyUser = () => {\r\n  const matchUserLogin = async (user: UserLogin) => {\r\n    const response = await fetch(`${REACT_APP_SERVER_API}/api/my/user`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ user }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to get user');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n\r\n  const {\r\n    mutateAsync: userLogin,\r\n    isPending,\r\n    error,\r\n  } = useMutation({\r\n    mutationKey: ['matchUserLogin'],\r\n    mutationFn: matchUserLogin,\r\n  });\r\n\r\n  return { userLogin, isPending, error };\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Card,\r\n  // Containervalues: UserLogin,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  FormFeedback,\r\n  Alert,\r\n} from 'reactstrap';\r\n\r\n// Formik validation\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useUserAuth } from 'contexts/UserAuth';\r\n\r\nimport withRouter from 'Components/Common/withRouter';\r\nimport { createSelector } from 'reselect';\r\nimport { userLogin } from 'api/usersLogin';\r\nimport { message } from 'antd';\r\nimport CustomePass from 'Components/CustomePass';\r\nimport { useMatchMyUser  } from 'api/userApi';\r\n\r\nconst UserLogin = (props: any) => {\r\n  const { userLogin, isPending } = useMatchMyUser();\r\n  const { storeToken, isLoggedIn, avater, isNewUser } = useUserAuth();\r\n  const nevigation = useNavigate();\r\n\r\n  const selectProperties = createSelector(\r\n    (state: any) => state.Login,\r\n    login => ({\r\n      error: login.error,\r\n    })\r\n  );\r\n\r\n  const { error } = useSelector(selectProperties);\r\n\r\n  // Form validation\r\n  const validation: any = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().required('Please Enter Your email').trim(),\r\n      password: Yup.string().required('Please Enter Your Password'),\r\n    }),\r\n    onSubmit: (values: UserLogin) => {\r\n      userLogin(values);\r\n      console.log(isPending);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form\r\n      className=\"form-horizontal login-form\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        validation.handleSubmit();\r\n        return false;\r\n      }}\r\n    >\r\n      <h1 className=\"text-center fs-1 fw-semibold my-5\">\r\n        Wellcome to our <span className=\"text-gradients\">ReviewAide</span>\r\n      </h1>\r\n      <div className=\"mb-3\">\r\n        {error ? <Alert color=\"danger\">{error}</Alert> : null}\r\n        <Label className=\"form-label fs-5\">Email</Label>\r\n        <Input\r\n          name=\"email\"\r\n          className=\"form-control rounded-4 fs-5\"\r\n          placeholder=\"Enter your email\"\r\n          type=\"text\"\r\n          onChange={validation.handleChange}\r\n          onBlur={validation.handleBlur}\r\n          value={validation.values.email || ''}\r\n          invalid={\r\n            validation.touched.email && validation.errors.email ? true : false\r\n          }\r\n        />\r\n        {validation.touched.email && validation.errors.email ? (\r\n          <FormFeedback type=\"invalid\">{validation.errors.email}</FormFeedback>\r\n        ) : null}\r\n      </div>\r\n      <CustomePass\r\n        className=\"rounded-start-pill fs-5 \"\r\n        buttonClassName=\"rounded-end-pill\"\r\n        name=\"password\"\r\n        handleBlur={validation.handleBlur}\r\n        handleChange={validation.handleChange}\r\n        placeholder=\"Enter your password\"\r\n        touchedError={validation.touched.password}\r\n        validationError={validation.errors.password}\r\n        value={validation.values.password}\r\n      />\r\n      <div className=\"my-3\">\r\n        <Link\r\n          className=\"fs-6 text-decoration-none text-gradients fw-semibold py-5\"\r\n          to=\"/user/forgot-password\"\r\n        >\r\n          Forget Password\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"my-3 d-grid \">\r\n        <button\r\n          className=\"btn btn-block fw-bold text-white fs-5 rounded-5\"\r\n          type=\"submit\"\r\n          style={{ background: '#FE9150' }}\r\n        >\r\n          Log In\r\n        </button>\r\n        <div className=\"my-3\">\r\n          <span>Don't have an account?</span>\r\n          <Link\r\n            className=\"fs-6 text-decoration-none text-gradients fw-semibold ps-2\"\r\n            to=\"/user/forgot-password\"\r\n          >\r\n            Sign up\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  );\r\n}; /* \r\n\r\n\r\n\r\n*/\r\n\r\nexport default withRouter(UserLogin);\r\n"],"names":["Component","props","location","useLocation","navigate","useNavigate","params","useParams","_jsx","router","_ref","err","name","placeholder","value","validationError","handleChange","handleBlur","touchedError","buttonClassName","other","show","setShow","useState","children","_jsxs","className","Alert","color","Label","Input","type","onChange","onBlur","invalid","onClick","style","background","concat","id","FormFeedback","REACT_APP_SERVER_API","withRouter","userLogin","isPending","useMatchMyUser","mutateAsync","error","useMutation","mutationKey","mutationFn","async","response","fetch","method","headers","body","JSON","stringify","user","ok","Error","json","storeToken","isLoggedIn","avater","isNewUser","useUserAuth","selectProperties","createSelector","state","Login","login","useSelector","validation","useFormik","enableReinitialize","initialValues","email","password","validationSchema","Yup","required","trim","onSubmit","values","console","log","Form","e","preventDefault","handleSubmit","touched","errors","CustomePass","Link","to"],"sourceRoot":""}